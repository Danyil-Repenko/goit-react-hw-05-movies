{"version":3,"file":"static/js/195.7301ed2e.chunk.js","mappings":"kNAEaA,EAAsB,SAACC,EAAMC,GACxC,IAAQC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,GAAIC,EAASJ,EAATI,KACnB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA7C,SACGC,GAAgBE,KAFZD,EAMZ,E,2BC4CD,EAlDe,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMZ,GAAWa,EAAAA,EAAAA,MACXC,EAAW,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAJ,EAGAG,EAAAA,EAAAA,GADiB,eACOH,GACrBI,MAAK,YACJ,OADqB,EAAdC,QACQC,KAAI,SAAAC,GAAM,OAAIvB,EAAoBuB,EAAQrB,EAAhC,GAC1B,IACAkB,MAAK,SAAAV,GAAM,OAAIC,EAAUD,EAAd,GAPgB,CAQ/B,GAAE,CAACM,EAAad,IAkBjB,OACE,4BACE,kBACEsB,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAC,GArBU,IAAAC,IAsBAD,EAAME,OAAOJ,MApBrCX,EAD6B,KAAVc,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAsB1C,KAEH,mBAAQJ,KAAK,SAASM,QApBH,WACrB,GAAoB,KAAhBd,EAAJ,EAGAG,EAAAA,EAAAA,GADiB,eACOH,GACrBI,MAAK,YACJ,OADqB,EAAdC,QACQC,KAAI,SAAAC,GAAM,OAAIvB,EAAoBuB,EAAQrB,EAAhC,GAC1B,IACAkB,MAAK,SAAAV,GAAM,OAAIC,EAAUD,EAAd,GAPgB,CAQ/B,EAWG,qBAGA,wBAAKA,MAGV,C,sBCrDD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIrC,EAAO+B,EAAIK,GAAKC,GAChBb,EAAQxB,EAAKwB,KAInB,CAHE,MAAOc,GAEP,YADAL,EAAOK,EAET,CAEItC,EAAKuC,KACPP,EAAQR,GAERgB,QAAQR,QAAQR,GAAOL,KAAKe,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMV,GACbM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQX,EAClE,CAEA,SAASW,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C,sDClCO,SAAe/B,EAAtB,iDAAO,OAAP,cAAO,WAA6BgC,EAAcvB,GAA3C,iFACW,gCACA,mCACVwB,EAAcxB,EAAK,iBAAaA,GAAU,GAH3C,SAIqByB,MAAM,GAAD,OAHf,iCAGe,OAChBF,EADgB,oBAFf,oCAEe,OACkBC,EADlB,YAJ1B,WAICE,EAJD,QAOYC,GAPZ,sBAQG,IAAIC,MAAMF,GARb,wBAUwBA,EAAYG,OAVpC,eAUCC,EAVD,yBAWEA,GAXF,mE","sources":["components/TrandingListElement/TrandingListElement.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","performSearch.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport const TrandingListElement = (info, location) => {\n  const { title, id, name } = info;\n  return (\n    <li key={id}>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        {title ? title : name}\n      </NavLink>\n    </li>\n  );\n};\n","import { TrandingListElement } from 'components/TrandingListElement/TrandingListElement';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { performSearch } from 'performSearch';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const queryString = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryString === '') return;\n\n    const exactUrl = 'search/movie';\n    performSearch(exactUrl, queryString)\n      .then(({ results }) => {\n        return results.map(result => TrandingListElement(result, location));\n      })\n      .then(movies => setMovies(movies));\n  }, [queryString, location]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const performeSearch = () => {\n    if (queryString === '') return;\n\n    const exactUrl = 'search/movie';\n    performSearch(exactUrl, queryString)\n      .then(({ results }) => {\n        return results.map(result => TrandingListElement(result, location));\n      })\n      .then(movies => setMovies(movies));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={queryString}\n        onChange={event => {\n          updateQueryString(event.target.value);\n        }}\n      />\n      <button type=\"button\" onClick={performeSearch}>\n        Search\n      </button>\n      <ul>{movies}</ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export async function performSearch(modification, query) {\n  const baseURL = 'https://api.themoviedb.org/3/';\n  const api_key = '34cb69d93ca1c9a8ca1b557dff1c5374';\n  const querySearch = query ? `&query=${query}` : '';\n  const getResponse = await fetch(\n    `${baseURL}${modification}?api_key=${api_key}${querySearch}&page=1`\n  );\n  if (!getResponse.ok) {\n    throw new Error(getResponse);\n  }\n  const parcedResponse = await getResponse.json();\n  return parcedResponse;\n}\n"],"names":["TrandingListElement","info","location","title","id","name","to","state","from","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","useLocation","queryString","get","useEffect","performSearch","then","results","map","result","type","value","onChange","event","query","target","onClick","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","modification","querySearch","fetch","getResponse","ok","Error","json","parcedResponse"],"sourceRoot":""}