{"version":3,"file":"static/js/544.d808cd25.chunk.js","mappings":"4LAEaA,EAAc,SAACC,EAAMC,GAChC,IAAQC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,GAAIC,EAASJ,EAATI,KACnB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA7C,SACGC,GAAgBE,KAFZD,EAMZ,C,8ECWD,UAlBiB,WACf,OAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,GADiB,oBACOC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9B,OAAOJ,EAAYI,EACpB,GACF,GAAE,KAGD,4BACE,4CACA,wBAAKL,EAASM,OAAS,GAAKN,EAASO,KAAI,SAAAC,GAAI,OAAIlB,EAAAA,EAAAA,GAAYkB,EAAhB,QAGlD,C,sBCpBD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIzB,EAAOmB,EAAIK,GAAKC,GAChBC,EAAQ1B,EAAK0B,KAInB,CAHE,MAAOC,GAEP,YADAN,EAAOM,EAET,CAEI3B,EAAK4B,KACPR,EAAQM,GAERG,QAAQT,QAAQM,GAAOb,KAAKS,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,EAClE,CAEA,SAASH,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,sDClCO,SAAe1B,EAAtB,iDAAO,OAAP,cAAO,WAA6B2B,EAAcC,GAA3C,iFACW,gCACA,mCACVC,EAAcD,EAAK,iBAAaA,GAAU,GAH3C,SAIqBE,MAAM,GAAD,OAHf,iCAGe,OAChBH,EADgB,oBAFf,oCAEe,OACkBE,EADlB,YAJ1B,WAICE,EAJD,QAOYC,GAPZ,sBAQG,IAAIC,MAAMF,GARb,wBAUwBA,EAAYG,OAVpC,eAUCC,EAVD,yBAWEA,GAXF,mE","sources":["components/ListElement/ListElement.jsx","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","tools/performSearch.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport const ListElement = (info, location) => {\n  const { title, id, name } = info;\n  return (\n    <li key={id}>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        {title ? title : name}\n      </NavLink>\n    </li>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { performSearch } from 'tools/performSearch';\nimport { ListElement } from 'components/ListElement/ListElement';\n\nconst HomePage = () => {\n  const [tranding, setTranding] = useState([]);\n\n  useEffect(() => {\n    const exactUrl = 'trending/all/day';\n    performSearch(exactUrl).then(({ results }) => {\n      return setTranding(results);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Tranding Today</h2>\n      <ul>{tranding.length > 0 && tranding.map(film => ListElement(film))}</ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export async function performSearch(modification, query) {\n  const baseURL = 'https://api.themoviedb.org/3/';\n  const api_key = '34cb69d93ca1c9a8ca1b557dff1c5374';\n  const querySearch = query ? `&query=${query}` : '';\n  const getResponse = await fetch(\n    `${baseURL}${modification}?api_key=${api_key}${querySearch}&page=1`\n  );\n  if (!getResponse.ok) {\n    throw new Error(getResponse);\n  }\n  const parcedResponse = await getResponse.json();\n  return parcedResponse;\n}\n"],"names":["ListElement","info","location","title","id","name","to","state","from","useState","tranding","setTranding","useEffect","performSearch","then","results","length","map","film","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","modification","query","querySearch","fetch","getResponse","ok","Error","json","parcedResponse"],"sourceRoot":""}